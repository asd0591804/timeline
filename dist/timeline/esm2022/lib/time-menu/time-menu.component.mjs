/* eslint-disable @typescript-eslint/no-inferrable-types */
import { Component, ElementRef, EventEmitter, HostListener, Input, Output, inject } from '@angular/core';
import { PanelMenuModule } from 'primeng/panelmenu';
import { TimelineModule } from 'primeng/timeline';
import { TimeMenuService } from './time-menu.service';
import { DatePipe, NgClass, NgIf } from '@angular/common';
import * as i0 from "@angular/core";
import * as i1 from "primeng/panelmenu";
import * as i2 from "primeng/api";
import * as i3 from "primeng/timeline";
export class TimeMenuComponent {
    constructor() {
        /** 點選 menu 觸發的事件 **/
        this.menuSelect = new EventEmitter();
        this.#timeMenuService = inject(TimeMenuService);
        this.#elementRef = inject(ElementRef);
    }
    #isMouseScroll;
    #timeMenuService;
    #elementRef;
    /** 監聽是否有滑鼠滾動時間軸
     * - 處理畫面上的連動
     */
    onTimelineScroll() {
        this.#timeMenuService.scrollHandler(this.#elementRef, this.value, this.#isMouseScroll);
    }
    /** 初始化資料
     * - 年月轉換成左邊的菜單，可使用的資料(MenuItems)
     * - 排序 timeline 資料
     */
    ngOnInit() {
        this.value.sort((x, y) => x.time.getTime() - y.time.getTime());
        this.yearMonths = this.#timeMenuService.getYearMonths(this.value);
    }
    /** 點選了中間時間軸的項目
     * @param timeItem 點選的那筆紀錄
     */
    onTimelineClick(timeItem) {
        this.selectedId = timeItem.id;
        this.menuSelect.emit(timeItem.subItems);
    }
    /** 當滑鼠移入時間軸
     * - 設定滑鼠滾動狀態
     */
    onMouseOver() {
        this.#isMouseScroll = true;
    }
    /** 當滑鼠移出時間軸
     * - 設定滑鼠滾動狀態
     */
    onMouseLeave() {
        this.#isMouseScroll = false;
    }
    /** 確認是不是被點選的項目
     * @param timeItem 每一筆紀錄
     * @returns true: 是 / false: 否
     */
    isItemClick(timeItem) {
        return timeItem.id === this.selectedId;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: TimeMenuComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.2", type: TimeMenuComponent, isStandalone: true, selector: "his-time-menu", inputs: { value: "value" }, outputs: { menuSelect: "menuSelect" }, host: { listeners: { "scroll": "onTimelineScroll($event)" } }, ngImport: i0, template: "<!-- eslint-disable @angular-eslint/template/mouse-events-have-key-events -->\n\n<div class=\"timeMenuLayout\">\n  <div class=\"card flex justify-content-center scrollItem\">\n      <p-panelMenu [model]=\"yearMonths\" id=\"yearsPanel\"></p-panelMenu>\n  </div>\n\n  <div class=\"card scrollItem\" id=\"scrollContainer\" (scroll)=\"onTimelineScroll()\" (mouseover)=\"onMouseOver()\" (mouseleave)=\"onMouseLeave()\">\n    <p-timeline [value]=\"value\" id=\"timeline\">\n      <ng-template pTemplate=\"marker\" let-item>\n        <span class=\"custom-marker shadow-2 dot-style green-dot\" [ngClass]=\"{'orange-dot': isItemClick(item)}\"></span>\n        <span class=\"custom-connect eachconnent\" [ngClass]=\"{'eachconnent-select': isItemClick(item)}\"></span>\n      </ng-template>\n      <ng-template pTemplate=\"content\" let-item>\n        <div class=\"content-flex\">\n          <button (click)=\"onTimelineClick(item)\" class=\"button-time\" [ngClass]=\"{'button-time-selected': isItemClick(item)}\">\n            <div class=\"line-height\">\n              {{ item.time | date:'MM-dd' }} <br>\n              <span class=\"fontsize\" [ngClass]=\"{'fontsize-selected': isItemClick(item)}\">{{ item.subtitle }}</span><br>\n              <span class=\"fontsize-caption\" [ngClass]=\"{'fontsize-caption-selected': isItemClick(item)}\">{{ item.title }}</span>\n            </div>\n          </button>\n          <svg *ngIf=\"isItemClick(item)\" class=\"triangle-position\"  width=\"25\" height=\"25\" viewBox=\"-50 -50 300 300\" transform=\"rotate(270) scale(2)\">\n            <polygon class=\"triangle-circle\" stroke-linejoin=\"round\" points=\"100,0 0,200 200,200\"/>\n          </svg>\n        </div>\n      </ng-template>\n    </p-timeline>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "ngmodule", type: PanelMenuModule }, { kind: "component", type: i1.PanelMenu, selector: "p-panelMenu", inputs: ["model", "style", "styleClass", "multiple", "transitionOptions", "id", "tabindex"] }, { kind: "directive", type: i2.PrimeTemplate, selector: "[pTemplate]", inputs: ["type", "pTemplate"] }, { kind: "ngmodule", type: TimelineModule }, { kind: "component", type: i3.Timeline, selector: "p-timeline", inputs: ["value", "style", "styleClass", "align", "layout"] }, { kind: "pipe", type: DatePipe, name: "date" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: TimeMenuComponent, decorators: [{
            type: Component,
            args: [{ selector: 'his-time-menu', standalone: true, imports: [NgClass, NgIf, PanelMenuModule, TimelineModule, DatePipe], template: "<!-- eslint-disable @angular-eslint/template/mouse-events-have-key-events -->\n\n<div class=\"timeMenuLayout\">\n  <div class=\"card flex justify-content-center scrollItem\">\n      <p-panelMenu [model]=\"yearMonths\" id=\"yearsPanel\"></p-panelMenu>\n  </div>\n\n  <div class=\"card scrollItem\" id=\"scrollContainer\" (scroll)=\"onTimelineScroll()\" (mouseover)=\"onMouseOver()\" (mouseleave)=\"onMouseLeave()\">\n    <p-timeline [value]=\"value\" id=\"timeline\">\n      <ng-template pTemplate=\"marker\" let-item>\n        <span class=\"custom-marker shadow-2 dot-style green-dot\" [ngClass]=\"{'orange-dot': isItemClick(item)}\"></span>\n        <span class=\"custom-connect eachconnent\" [ngClass]=\"{'eachconnent-select': isItemClick(item)}\"></span>\n      </ng-template>\n      <ng-template pTemplate=\"content\" let-item>\n        <div class=\"content-flex\">\n          <button (click)=\"onTimelineClick(item)\" class=\"button-time\" [ngClass]=\"{'button-time-selected': isItemClick(item)}\">\n            <div class=\"line-height\">\n              {{ item.time | date:'MM-dd' }} <br>\n              <span class=\"fontsize\" [ngClass]=\"{'fontsize-selected': isItemClick(item)}\">{{ item.subtitle }}</span><br>\n              <span class=\"fontsize-caption\" [ngClass]=\"{'fontsize-caption-selected': isItemClick(item)}\">{{ item.title }}</span>\n            </div>\n          </button>\n          <svg *ngIf=\"isItemClick(item)\" class=\"triangle-position\"  width=\"25\" height=\"25\" viewBox=\"-50 -50 300 300\" transform=\"rotate(270) scale(2)\">\n            <polygon class=\"triangle-circle\" stroke-linejoin=\"round\" points=\"100,0 0,200 200,200\"/>\n          </svg>\n        </div>\n      </ng-template>\n    </p-timeline>\n  </div>\n</div>\n" }]
        }], propDecorators: { value: [{
                type: Input
            }], menuSelect: [{
                type: Output
            }], onTimelineScroll: [{
                type: HostListener,
                args: ['scroll', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,